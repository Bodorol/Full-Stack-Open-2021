{"ast":null,"code":"var _jsxFileName = \"/home/brenner/unicafe/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Display = ({\n  text,\n  stat\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [text, \": \", stat]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Display;\n\nconst Button = ({\n  text,\n  handleClick\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleClick,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Button;\n\nconst Statistics = ({\n  good,\n  neutral,\n  bad\n}) => {\n  const totalFeedback = good + bad + neutral;\n  const avgScore = (good - bad) / totalFeedback;\n  const percentPositive = good * 100 / totalFeedback;\n\n  if (totalFeedback > 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Display, {\n        text: \"Good\",\n        stat: good\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Display, {\n        text: \"Neutral\",\n        stat: neutral\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Display, {\n        text: \"Bad\",\n        stat: bad\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Display, {\n        text: \"Total Feedback\",\n        stat: totalFeedback\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Display, {\n        text: \"Average Score\",\n        stat: avgScore\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Display, {\n        text: \"Percent Positive Feedback\",\n        stat: percentPositive + \"%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No Feedback Given.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_c3 = Statistics;\n\nconst App = () => {\n  _s();\n\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Give Feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"Good\",\n      handleClick: () => setGood(good + 1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"Neutral\",\n      handleClick: () => setNeutral(neutral + 1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"Bad\",\n      handleClick: () => setBad(bad + 1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      good: good,\n      neutral: neutral,\n      bad: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c4 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Display\");\n$RefreshReg$(_c2, \"Button\");\n$RefreshReg$(_c3, \"Statistics\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"sources":["/home/brenner/unicafe/src/App.js"],"names":["React","useState","Display","text","stat","Button","handleClick","Statistics","good","neutral","bad","totalFeedback","avgScore","percentPositive","App","setGood","setNeutral","setBad"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nconst Display = ({text, stat}) => {\n  return (\n    <div>\n      <p>{text}: {stat}</p>\n    </div>\n  );\n}\n\nconst Button = ({text, handleClick}) => {\n  return (\n    <button onClick={handleClick}>{text}</button>\n  );\n}\n\nconst Statistics = ({good, neutral, bad}) => {\n  const totalFeedback = good + bad + neutral;\n  const avgScore = (good - bad) / totalFeedback;\n  const percentPositive = good * 100 / totalFeedback;\n  \n  if (totalFeedback > 0) {\n    return (\n      <div>\n        <Display text=\"Good\" stat={good} />\n        <Display text=\"Neutral\" stat={neutral} />\n        <Display text=\"Bad\" stat={bad} />\n        <Display text=\"Total Feedback\" stat={totalFeedback} />\n        <Display text=\"Average Score\" stat={avgScore} />\n        <Display text=\"Percent Positive Feedback\" stat={percentPositive + \"%\"} />\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        <p>No Feedback Given.</p>\n      </div>\n    );\n  }\n}\n\nconst App = () => {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  \n\n  return (\n    <div>\n      <h1>Give Feedback</h1>\n      <Button text=\"Good\" handleClick={() => setGood(good + 1)} />\n      <Button text=\"Neutral\" handleClick={() => setNeutral(neutral + 1)} />\n      <Button text=\"Bad\" handleClick={() => setBad(bad + 1)} />\n      <h1>Statistics</h1>\n      <Statistics good={good} neutral={neutral} bad={bad} />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}